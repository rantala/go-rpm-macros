#!/bin/sh

usage() {
cat >&2 << EOF_USAGE
Usage: $0 -g <go import path> [-p <prefix>] [-G <go path>] [-v <version string>]
<go import path>   the Go import path of the target package
<prefix>:          an eventual prefix path such as %{buildroot}
<go path>:         the root of the Go source tree

EOF_USAGE
exit 1
}

prefix=''
gopath=/usr/share/gocode
goipps=''
ignores=''

while [ $# -gt 0 ] ; do
  case $1 in
    -h|--help)    usage ;;
    -g|--goipps)  goipps="$2" ; shift;;
    -p|--prefix)  prefix=$(realpath -sm "$2") ; shift;;
    -d|--ignore-dir)   ignores="$ignores $1 $2" ; shift;;
    -t|--ignore-tree)  ignores="$ignores $1 $2" ; shift;;
    -r|--ignore-regex)  ignores="$ignores $1 $2" ; shift;;
    (--)          shift; break;;
    (-*)          echo "$0: error - unrecognized option $1" >&2; exit 3;;
    (*)           break;;
  esac
  shift
done

# If the go import path prefixes are not set => do nothing
[[ -z ${goipps} ]] && exit 0

requires() {
ipprefix=${1}

for ip in $(echo ${goipps} | tr ':' '\n' | grep -v "^${ipprefix}$"); do
	ignores="$ignores -t $ip"
done;

for dep in $(\
	GOPATH=${prefix}/usr/share/gocode \
	golist \
	--imported \
	--package-path ${ipprefix} \
	--skip-self \
	${ignores} \
); do
	echo "golang($dep)"
done
}

while read dir; do
	ipprefixes=($(echo "${goipps}" | tr ':' '\n'))
	for ipprefix in ${ipprefixes[@]}; do
		if [ "${dir##${prefix}/usr/share/gocode/src/}" == "${ipprefix}" ]; then
			requires ${ipprefix}
		fi
	done
done

