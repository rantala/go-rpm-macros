#!/bin/sh

set -e

usage() {
cat >&2 << EOF_USAGE
Usage: $0 -g <go import path> [-p <prefix>] [-G <go path>] [-v <version string>]
<go import path>   the Go import path of the target package
<prefix>:          an eventual prefix path such as %{buildroot}
<go path>:         the root of the Go source tree
<version string>:  tag the provides with the <version string>

EOF_USAGE
exit 1
}

version=''
prefix=''
gopath=/usr/share/gocode
ignores=''

declare -a goipps
declare -A attributes

while [ $# -gt 0 ] ; do
  case $1 in
    -h|--help)    usage ;;
    -i|--goipps)  goipps=("${goipps[@]}" "$2") ; shift;;
    -p|--prefix)  prefix=$(realpath -sm "$2") ; shift;;
    -v|--version) version="$2" ; shift;;
    -a|--attr|--attribute|--attributes)
                  IFS=')' read -r -a newattrs <<< "$2"
                  for index in "${!newattrs[@]}" ; do
                    newattrs[index]=${newattrs[index]#\(}
                    attributes[${newattrs[index]%%=*}]=${newattrs[index]#*=}
                  done ; shift;;
    -d|--ignore-dir)   ignores="$ignores $1 $2" ; shift;;
    -t|--ignore-tree)  ignores="$ignores $1 $2" ; shift;;
    -r|--ignore-regex)  ignores="$ignores $1 $2" ; shift;;
    (--)          shift; break;;
    (-*)          echo "$0: error - unrecognized option $1" >&2; exit 3;;
    (*)           break;;
  esac
  shift
done

# If the go import path prefixes are not set => do nothing
[[ ${#goipps[@]} -eq 0 ]] && exit 0

deco=( "" )
# Some filtering may be needed in the future
for key in "${!attributes[@]}"; do
  [ -n "${attributes[$key]}" ] && deco+=( "($key=${attributes[$key]})" )
done

provides() {
ipprefix=${1}
for ip in "${goipps[@]}"; do
	[ "${ip}" == "${ipprefix}" ] && continue
	ignores="$ignores -t $ip"
done;

for provides in $(\
	GOPATH=${prefix}/usr/share/gocode \
	golist \
	--provided \
	--package-path ${ipprefix} \
	${ignores} \
); do
        for index in "${!deco[@]}" ; do
           echo "golang($provides)${deco[index]} = ${version}"
        done
done
}

# More than one import path prefixed can be shipeed
ipprefixes=($(echo "${goipps}" | tr ':' '\n'))

while read dir; do
	for ipprefix in ${goipps[@]}; do
    # Process only the top level directory
		if [ "${dir##${prefix}/usr/share/gocode/src/}" == "${ipprefix}" ]; then
			provides ${ipprefix}
		fi
	done
done
